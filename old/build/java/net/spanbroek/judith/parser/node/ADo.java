/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.spanbroek.judith.parser.node;

import java.util.*;
import net.spanbroek.judith.parser.analysis.*;

public final class ADo extends PDo
{
    private TDosym _dosym_;
    private PConditionals _conditionals_;
    private TOdsym _odsym_;

    public ADo()
    {
    }

    public ADo(
        TDosym _dosym_,
        PConditionals _conditionals_,
        TOdsym _odsym_)
    {
        setDosym(_dosym_);

        setConditionals(_conditionals_);

        setOdsym(_odsym_);

    }
    public Object clone()
    {
        return new ADo(
            (TDosym) cloneNode(_dosym_),
            (PConditionals) cloneNode(_conditionals_),
            (TOdsym) cloneNode(_odsym_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADo(this);
    }

    public TDosym getDosym()
    {
        return _dosym_;
    }

    public void setDosym(TDosym node)
    {
        if(_dosym_ != null)
        {
            _dosym_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _dosym_ = node;
    }

    public PConditionals getConditionals()
    {
        return _conditionals_;
    }

    public void setConditionals(PConditionals node)
    {
        if(_conditionals_ != null)
        {
            _conditionals_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _conditionals_ = node;
    }

    public TOdsym getOdsym()
    {
        return _odsym_;
    }

    public void setOdsym(TOdsym node)
    {
        if(_odsym_ != null)
        {
            _odsym_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _odsym_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_dosym_)
            + toString(_conditionals_)
            + toString(_odsym_);
    }

    void removeChild(Node child)
    {
        if(_dosym_ == child)
        {
            _dosym_ = null;
            return;
        }

        if(_conditionals_ == child)
        {
            _conditionals_ = null;
            return;
        }

        if(_odsym_ == child)
        {
            _odsym_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_dosym_ == oldChild)
        {
            setDosym((TDosym) newChild);
            return;
        }

        if(_conditionals_ == oldChild)
        {
            setConditionals((PConditionals) newChild);
            return;
        }

        if(_odsym_ == oldChild)
        {
            setOdsym((TOdsym) newChild);
            return;
        }

    }
}
