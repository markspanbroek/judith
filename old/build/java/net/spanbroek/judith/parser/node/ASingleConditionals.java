/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.spanbroek.judith.parser.node;

import java.util.*;
import net.spanbroek.judith.parser.analysis.*;

public final class ASingleConditionals extends PConditionals
{
    private PConditional _conditional_;

    public ASingleConditionals()
    {
    }

    public ASingleConditionals(
        PConditional _conditional_)
    {
        setConditional(_conditional_);

    }
    public Object clone()
    {
        return new ASingleConditionals(
            (PConditional) cloneNode(_conditional_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASingleConditionals(this);
    }

    public PConditional getConditional()
    {
        return _conditional_;
    }

    public void setConditional(PConditional node)
    {
        if(_conditional_ != null)
        {
            _conditional_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _conditional_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_conditional_);
    }

    void removeChild(Node child)
    {
        if(_conditional_ == child)
        {
            _conditional_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_conditional_ == oldChild)
        {
            setConditional((PConditional) newChild);
            return;
        }

    }
}
