/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.spanbroek.judith.parser.node;

import java.util.*;
import net.spanbroek.judith.parser.analysis.*;

public final class APlusExpression2 extends PExpression2
{
    private PExpression2 _expression2_;
    private TPlus _plus_;
    private PExpression3 _expression3_;

    public APlusExpression2()
    {
    }

    public APlusExpression2(
        PExpression2 _expression2_,
        TPlus _plus_,
        PExpression3 _expression3_)
    {
        setExpression2(_expression2_);

        setPlus(_plus_);

        setExpression3(_expression3_);

    }
    public Object clone()
    {
        return new APlusExpression2(
            (PExpression2) cloneNode(_expression2_),
            (TPlus) cloneNode(_plus_),
            (PExpression3) cloneNode(_expression3_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusExpression2(this);
    }

    public PExpression2 getExpression2()
    {
        return _expression2_;
    }

    public void setExpression2(PExpression2 node)
    {
        if(_expression2_ != null)
        {
            _expression2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expression2_ = node;
    }

    public TPlus getPlus()
    {
        return _plus_;
    }

    public void setPlus(TPlus node)
    {
        if(_plus_ != null)
        {
            _plus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _plus_ = node;
    }

    public PExpression3 getExpression3()
    {
        return _expression3_;
    }

    public void setExpression3(PExpression3 node)
    {
        if(_expression3_ != null)
        {
            _expression3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expression3_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_expression2_)
            + toString(_plus_)
            + toString(_expression3_);
    }

    void removeChild(Node child)
    {
        if(_expression2_ == child)
        {
            _expression2_ = null;
            return;
        }

        if(_plus_ == child)
        {
            _plus_ = null;
            return;
        }

        if(_expression3_ == child)
        {
            _expression3_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_expression2_ == oldChild)
        {
            setExpression2((PExpression2) newChild);
            return;
        }

        if(_plus_ == oldChild)
        {
            setPlus((TPlus) newChild);
            return;
        }

        if(_expression3_ == oldChild)
        {
            setExpression3((PExpression3) newChild);
            return;
        }

    }
}
