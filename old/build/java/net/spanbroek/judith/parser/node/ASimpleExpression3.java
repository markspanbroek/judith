/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.spanbroek.judith.parser.node;

import java.util.*;
import net.spanbroek.judith.parser.analysis.*;

public final class ASimpleExpression3 extends PExpression3
{
    private PExpression4 _expression4_;

    public ASimpleExpression3()
    {
    }

    public ASimpleExpression3(
        PExpression4 _expression4_)
    {
        setExpression4(_expression4_);

    }
    public Object clone()
    {
        return new ASimpleExpression3(
            (PExpression4) cloneNode(_expression4_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleExpression3(this);
    }

    public PExpression4 getExpression4()
    {
        return _expression4_;
    }

    public void setExpression4(PExpression4 node)
    {
        if(_expression4_ != null)
        {
            _expression4_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expression4_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_expression4_);
    }

    void removeChild(Node child)
    {
        if(_expression4_ == child)
        {
            _expression4_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_expression4_ == oldChild)
        {
            setExpression4((PExpression4) newChild);
            return;
        }

    }
}
