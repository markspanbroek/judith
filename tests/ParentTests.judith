object ParentTests := Object
|[
    method multipleInheritanceWorks
    [
        object Foo := Object 
        |[
            method asText
            [
                result := "Foo"
            ]
        ]|
        
        object Bar := Foo
        |[
            method asText
            [
                result := "Bar:" + parent.asText
            ]
        ]|
        
        object Baz := Bar
        |[
            method asText
            [
                result := "Baz:" + parent.asText
            ]        
        ]|
        
        Assert.equal("Baz:Bar:Foo", Baz.asText)
    ]
    
    method multipleInheritanceWorksWithReplace
    [
        object Foo := Object 
        |[
            method asText
            [
                result := "Foo"
            ]
        ]|
        
        Foo.replace(
            Foo
            |[
                method asText
                [
                    result := "Bar:" + parent.asText
                ]
            ]|
        )
        
        Foo.replace(
            Foo
            |[
                method asText
                [
                    result := "Baz:" + parent.asText
                ]        
            ]|
       )
        
        Assert.equal("Baz:Bar:Foo", Foo.asText)
    ]
    
    method parentMethodsHaveAccessToDescendantMethods
    [
        object Parent := Object 
        |[
            method parentMethod [
                self.childMethod
            ]
        ]|

        object Child := Parent 
        |[
            object childMethodCalled := false
        
            method childMethod
            [
                childMethodCalled := true
            ]
            
            method checkParentHasAccessToChild
            [
                parent.parentMethod
                Assert.that(childMethodCalled)
            ]
        ]|
        
        Child.checkParentHasAccessToChild
    ]
]|

ParentTests
    .multipleInheritanceWorks
    .multipleInheritanceWorksWithReplace
    .parentMethodsHaveAccessToDescendantMethods
