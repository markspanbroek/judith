object Text := Objects.Text

object ListTests := Object 
|[
    object list := List.of(Text)

    method objectsOfCorrectTypeCanBeAdded 
    [
        list.add("foo")
    ]

    method objectsOfIncorrectTypeCannotBeAdded 
    [
        object exceptionWasThrown := false
        ExceptionHandler 
        |[
            method try 
            [
                list.add(1)
            ]
            method catch(exception) 
            [
                exceptionWasThrown := true
            ]
        ]|.run
        Assert.that(exceptionWasThrown).isTrue
    ]

    method doIsCalledForEachElement
    [
        object list := List.copy.add(40).add(2)
        object sum := 0
        list.do([x -> sum := sum + x])
        Assert.that(sum).equals(42)
    ]

    method allIsCalledForEachElement
    [
        object counter := 0
        object incrementer := [ counter := counter + 1 ]
        object list := List.copy.add(incrementer).add(incrementer)
        list.all.execute
        Assert.that(counter).equals(list.length)
    ]

    method asTextListsAllElements
    [
        object list := List.copy.add(1).add(2).add(3)
        Assert.that(list.asText).equals("{1, 2, 3}")
    ]

    method equalsChecksAllElements
    [
        Assert
            .that(List.copy.add(1).add(2))
            .equals(List.copy.add(1).add(2))
        Assert
            .that(List.copy.add(1).add(2))
            .isNotEqualTo(List.copy.add(1).add(1))
    ]

    method equalsIsFalseForNonLists
    [
        Assert
            .that(List.copy.add(1).add(2))
            .isNotEqualTo("foo")
    ]

    method equalsIsFalseForListsOfDiffertSizes
    [
        Assert
            .that(List.copy.add(1).add(2))
            .isNotEqualTo(List.copy.add(1).add(2).add(3))
    ]

    method sectionReturnsPartOfList
    [
        object list := List.copy.add(1).add(2).add(3)
        Assert.that(list.section(0,1)).equals(List.copy.add(1))
        Assert.that(list.section(1,3)).equals(List.copy.add(2).add(3))
        Assert.that(list.section(0,3)).equals(list)
    ]
]|

ListTests
    .objectsOfCorrectTypeCanBeAdded
    .objectsOfIncorrectTypeCannotBeAdded
    .doIsCalledForEachElement
    .allIsCalledForEachElement
    .asTextListsAllElements
    .equalsChecksAllElements
    .equalsIsFalseForNonLists
    .equalsIsFalseForListsOfDiffertSizes
    .sectionReturnsPartOfList
