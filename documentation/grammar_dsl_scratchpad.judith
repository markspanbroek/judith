object JudithParser := Objects.Parsing.Grammar
[
    object rule    := JudithParser.rule
    object literal := JudithParser.literal

    rule: "program":
        (rule:"w") + (rule:"statements") + (rule:"w")
        
    rule: "statements":
        ((rule:"statement") + ((rule:"w") + (rule:"statement")).repeat).optional
        
    rule: "statement":
        (rule: "object") or (rule:"assignment") or (rule:"if") or (rule:"do") or
        (rule:"methodcall") or (rule:"block")

    rule: "object":
        (literal:"object") + (rule:"w") + (rule:"identifier") + (rule:"w") +
        (literal:":=") + (rule:"w") + (rule:"expression")
        
    rule: "lambda":
        (literal:"[") + (rule:"w") + (rule:"identifier") +
        ((rule:"w") + (literal:",") + (rule:"w") + (rule:"identifier")).repeat +
        (rule:"w") + (literal:"->") + (rule:"w") + (rule:"expression") +
        (rule:"w") + (literal("]")
                
]
