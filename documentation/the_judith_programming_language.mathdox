<article>

  <title>the judith programming language</title>
  
  <section>
    <title>language constructs</title>
    
    <section>
      <title>statements</title>
      <para>
        In the judith language there is no statement separator or terminator, 
        such as the semicolon from C and Java. The language has been 
        specifically designed such that the end of each statement is clear 
        without an explicit marker.
      </para>
    </section>
    
    <section>
      <title>variables</title>
      <para>
        All variables are explicitly declared using the
        <markup>object</markup> keyword. An initial object should be assigned 
        to the variable upon declaration. In the following example a variable
        named <markup>amount</markup> is declared and an object representing the
        value 10 is assigned to the variable.
      </para>
      <informalexample>
        <programlisting>
          object amount := 10
        </programlisting>
      </informalexample>
      <para>
        Variables do not have a type, but objects do. This is a fairly subtle
        yet important difference. In languages such as C and Java, variables 
        have a type which is specified when declaring the variable. This type
        is then used by the compiler to ensure that no values of a different 
        type are assigned to the variable. When you have declared a variable of
        type <markup>int</markup>, you are not allowed to assign a string to
        that variable. In judith however this is allowed:
      </para>
      <informalexample>
        <programlisting>
          object amount := 10
          amount := "a lot"
        </programlisting>
      </informalexample>
      <para>
        This does not mean that there are no types in 
      </para>
    </section>
    
    <section>
      <title>literals</title>
    </section>
    
  </section>
  
</article>
