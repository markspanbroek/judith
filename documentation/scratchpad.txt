Defining Methods

  A simple method declaration looks like:
  
    method helloworld [
      result := 'Hello World!'
    ]
    
  A method with parameters (and pre- and postconditions) looks like this:
  
    method between(a,b) [ 
    
      assert(a:Number and b:Number)
      
      result := this > a and this < b
      
      assert(result:Boolean)
      
    ]

Ensuring that prototypes aren't poluted:

  object net := Object |[

    method spanbroek [
    
      result := Object |[
      
        method judith [
        
          result := Object |[
          
            object List := Object |[
            
              # list declaration here
            
            ]|
          
            method List [
            
              result := List.copy
            
            ]
          
          ]|
        
        ]
      
      ]|
    
    ]

  ]|

  object List := net.spanbroek.judith.List

  # when we forget to copy list here
  object list := List
  # and polute it here
  list.push("foo")
  # the global list isn't affected

