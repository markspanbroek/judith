[
    object ParserGenerator := Objects.Parsing.ParserGenerator
    object Parser := Objects.Parsing.Parser
    
    ParserGenerator.replace(ParserGenerator 
    |[
                        
      
      method repetition(operand) [
      
        result := self.alternation(
            List.copy
                .add(self.empty)
                .add(self.repetitionplus(operand))
        )
      
      ]
      
      method repetitionplus(operand) 
      [      
        object generator := self
      
        result := Parser 
        |[ 
            method run(context, index, result, continuation) 
            [
                object newcontinuation := Function 
                |[
                    method run(index, result) 
                    [
                        continuation.run(index, result)
                        generator.repetitionplus(operand).run(context, index, result, continuation)
                    ]
                ]|
        
                operand.run(context, index, result, newcontinuation)
            ]        
        ]|      
      ]
      
      method rule(name) [
      
        result := Parser |[ method run(context, index, result, continuation) [
        
          context.parser.get(name).run(context, index, result, continuation)
        
        ] ]|
      
      ]
      
      method transform(operand, transform) [
      
        result := Parser |[ method run(context, index, result, continuation) [
        
          object newcontinuation := Function |[ method run(newindex, newresult) [
          
            object slice := newresult.slice(result.length, newresult.length)
            continuation.run(newindex, result.copy.push(transform.run(slice)))
          
          ] ]|
          
          operand.run(context, index, result, newcontinuation)
        
        ] ]|
      
      ]
      
    ]|)
    
]
