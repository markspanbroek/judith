<project default='default' basedir='.'>

  <target name='sablecc.check'>
    <uptodate
        property='sablecc.notneeded'
        srcfile='source/sablecc/judith.sablecc'
        targetfile='build/java/net/spanbroek/judith/parser/lexer/Lexer.java'
    />
  </target>
  
  <target name='sablecc' depends='sablecc.check' unless='sablecc.notneeded'>
    <mkdir dir='build/java'/>
    <taskdef name='sablecc' classname='org.sablecc.ant.taskdef.Sablecc'>
      <classpath>
        <pathelement path='libraries/sablecc.jar'/>
        <pathelement path='libraries/sablecc-anttask.jar'/>
      </classpath>
    </taskdef>
    <sablecc src='source/sablecc' outputdirectory='build/java'>
      <include name='**/*.sablecc'/>
    </sablecc>
  </target>

  <target name='source' depends='sablecc'>
    <mkdir dir='build/java'/>
    <copy todir='build/java'>
      <fileset dir='source/java'/>
      <fileset dir='source/judith'/>
    </copy>
  </target>

  <target name='compile' depends='source'>
    <mkdir dir='build/classes'/>
    <javac srcdir='build/java' destdir='build/classes' debug='true'>
      <classpath>
        <fileset dir='libraries'>
          <include name='**/*.jar'/>
        </fileset>
      </classpath>
    </javac>
    <copy todir='build/classes'>
      <fileset dir='build/java'>
        <exclude name='**/*.java'/>
      </fileset>
    </copy>
  </target>

  <target name='jar' depends='compile'>
    <mkdir dir='build/jar'/>
    <jar
      destfile='build/jar/judith.jar'
      manifest='source/jar/META-INF/MANIFEST.MF'
    >
      <fileset dir='build/classes'/>
      <fileset dir='source/jar'/>
    </jar>
  </target>

  <target name='testStandardOutput' depends='jar'>
    <java jar='build/jar/judith.jar' fork='true' failonerror='true'>
      <arg file='tests/StandardOutputTest.judith'/>
      <redirector outputproperty='output'/>
    </java>
    <fail>
      <condition>
        <not>
          <equals arg1='The quick brown fox' arg2='${output}'/>
        </not>
      </condition>
    </fail>
  </target>
  
  <target name='testStandardInput' depends='jar'>
    <java jar='build/jar/judith.jar' fork='true' failonerror='true'>
      <arg file='tests/StandardInputTest.judith'/>
      <redirector inputstring='jumps over the lazy dog.'/>
    </java>
  </target>
    
  <target name='test' depends='jar,testStandardOutput,testStandardInput'>
    <java jar='build/jar/judith.jar' fork='true' failonerror='true'>
      <arg file='tests/AssertTests.judith'/>
      <arg file='tests/BlockTests.judith'/>
      <arg file='tests/BooleanTests.judith'/>
      <arg file='tests/DictionaryTests.judith'/>
      <arg file='tests/LambdaTests.judith'/>
      <arg file='tests/ListTests.judith'/>
      <arg file='tests/MethodTests.judith'/>
      <arg file='tests/NumberTests.judith'/>
      <arg file='tests/ParentTests.judith'/>
      <arg file='tests/ReferenceTests.judith'/>
      <arg file='tests/TextTests.judith'/>
      <arg file='tests/parser/AlternativesTests.judith'/>
      <arg file='tests/parser/BeginTests.judith'/>
      <arg file='tests/parser/ConcatenationTests.judith'/>
      <arg file='tests/parser/EmptyTests.judith'/>
      <arg file='tests/parser/EndTests.judith'/>
      <arg file='tests/parser/LiteralTests.judith'/>
      <arg file='tests/parser/NeverTests.judith'/>
      <arg file='tests/parser/RangeTests.judith'/>
      <arg file='tests/parser/RepetitionTests.judith'/>
      <arg file='tests/parser/RepetitionPlusTests.judith'/>
      <arg file='tests/MiscellaneousTests.judith'/>
    </java>
  </target>

  <target name='javadoc' depends='source'>
    <mkdir dir='build/javadoc'/>
    <javadoc sourcepath='build/java' destdir='build/javadoc'>
      <packageset dir='build/java'/>
      <classpath>
        <fileset dir='libraries'>
          <include name='**/*.jar'/>
        </fileset>
      </classpath>
    </javadoc>
  </target>

  <target name='clean'>
    <delete dir='build'/>
  </target>

  <target name='default' depends='test'/>
  <target name='all' depends='default,javadoc'/>

</project>
